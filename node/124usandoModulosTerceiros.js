const _ = require('lodash') //passamos o nome do módulo lodash. Não precisamos passar o caminho elativo, pois ele irá buscar primeiro por uma pasta chamada node_modules aqui onde o arquivo usandoModulosTerceiros.js está. Como não há nenhum, ele irá buscar + externo e achará a pasta node_modules. Aí ele buscará pelo arquivo index.js dentro da pasta node_modules, e ele achará esse arquivo index.js com o seguinte conteúdo dentro: module.exports = require('./lodash'); , ou seja, dentro da pasta node_modules ele achou o index.js e é dentro desse index.js que é realmente feito a importação do arquivo. É a partir desse index.js que irá procurando e carregando todas a bibliotecas. Então quando não pomos o caminho relativo esse é o percurso que é feito.

//Aqui usaremos uma biblioteca de terceiros, o lodash para gerar um número aleatório entre 1 e 1000.
setInterval(() => console.log(_.random(1, 1000)), 2000) // a cada 2 segundos executa 1 vez

//Agora iremos instalar outra biblioteca, mas de forma global, não vamos colocar ela dentro da pasta node_modules, e sim de forma global. Basta digitar:
//npm i -g nodemon
//o -g é de forma global, aí não é adicionado dentro da pasta node_modules, e sim instalar uma pasta global que poderemos acessar o comando, porque essa dependência que vamos instalar vamos acessar direto do prompt de comando. Instalamos o nodemon, agora dentro do prompt de comando conseguimos digitar nodemon. Com isso podemos executar agora esse arquivo abrindo o terminal na pasta clonado-github >> web-moderno >> curso >> node e digitando :
//nodemon usandoModulosTerceiros.js
//Com o nodemon, quando mudamos o código e salvamos automaticamente o nodemon irá restartar a aplicação para pegar o código mais novo e voltar a executar do 0, ou seja, não precisamos parar a execução do programa e depois executar de novo. O nodemon é um módulo do node que instalamos de forma global. Ele é muito interessante para ambientes de desenvolvimento. Quando digitamos no console rs e damos enter ele dá um restart, assim como quando mudamos qualquer coisa do código e salvamos. O nodemon a partir da linha de comando disparamos o node a partir dele, e ele ficará monitorando cada mudança no arquivo para dar um refresh, e caso desse algum tipo de erro nem assim iria cair, ela iria ficar parada esperamos concertar aí seria só dar um refresh.
//Para parar a execução do programa é só dar CTRL + C